<?xml version="1.0" encoding="UTF-8"?>
<hdevelop file_version="1.2" halcon_version="19.11.0.0">
<procedure name="main">
<interface/>
<body>
<l>for j:=0 to 4 by 1</l>
<l>    read_image(Image, 'img/homework'+j+'.png')</l>
<l>    binary_threshold (Image, Region, 'max_separability', 'light', UsedThreshold)</l>
<l>    closing_circle(Region, RegionClosing, 5)</l>
<l>    connection(RegionClosing, ConnectedRegions)</l>
<l>    region_features(ConnectedRegions, 'roundness', RoundValues)</l>
<l>    region_features(ConnectedRegions, 'area', AreaValues)</l>
<l>    region_features(ConnectedRegions, 'row', RowValues)</l>
<l>    region_features(ConnectedRegions, 'column', ColValues)</l>
<l>    region_features(ConnectedRegions, 'width', WValues)</l>
<l>    region_features(ConnectedRegions, 'height', HValues)</l>
<l>    region_features(ConnectedRegions, 'inner_radius', RValues)</l>
<c>    </c>
<l>    maxid := 0</l>
<l>    for i:=0 to |RoundValues|-1 by 1</l>
<l>        x := ColValues[i] - 20</l>
<l>        y := RowValues[i]</l>
<c>        </c>
<l>        if (RoundValues[i] &gt; RoundValues[maxid])</l>
<l>            maxid := i</l>
<l>        endif</l>
<c>        </c>
<l>        dev_disp_text('x='+ColValues[i]+', y='+y, 'image', y-12, x, 'black', [], [])</l>
<l>        dev_disp_text('Round='+RoundValues[i], 'image', y, x, 'black', [], [])</l>
<l>        dev_disp_text('Area='+AreaValues[i], 'image', y+12, x, 'black', [], [])</l>
<l>    endfor</l>
<l>    dev_disp_text('THIS IS CIRCLE! d='+(2*RValues[maxid]), 'image', RowValues[maxid]-30, ColValues[maxid]-20, 'black', [], [])</l>
<l>    stop()</l>
<l>endfor</l>
</body>
<docu id="main">
<parameters/>
</docu>
</procedure>
</hdevelop>
